{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sunny.sim/react_nodebird/front/components/PostFrom.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nexport var PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPost = _useSelector.addPost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector2.imagePaths;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  var onChangeText = React.useCallback(function (e) {\n    setText(e.target.value);\n  }, [text]);\n  var inpFileUploader = React.useRef('');\n  var onClickFileUploader = React.useCallback(function () {\n    inpFileUploader.current.click;\n    console.log(inpFileUploader.current);\n  }, [inpFileUploader.current]);\n\n  var onClickPost = function onClickPost() {\n    console.log('게시물 등록!');\n  };\n\n  var onSubmit = React.useCallback(function () {\n    dispatch(addPost);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickFileUploader,\n        ref: inpFileUploader,\n        children: \"\\uD30C\\uC77C\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        onClick: onClickPost,\n        children: \"\\uAC8C\\uC2DC\\uBB3C \\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), imagePaths.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: post,\n          style: {\n            width: '200px'\n          },\n          alt: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\uC81C\\uAC70\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"QTqvdeanK1Y4GSV0DfuDB3jMNUw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/sunny.sim/react_nodebird/front/components/PostFrom.js"],"names":["React","Form","Input","Button","useDispatch","useSelector","PostForm","dispatch","state","post","addPost","imagePaths","useState","text","setText","onChangeText","useCallback","e","target","value","inpFileUploader","useRef","onClickFileUploader","current","click","console","log","onClickPost","onSubmit","margin","map","display","width","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nexport const PostForm = () => {\n  const dispatch = useDispatch();\n  const { addPost } = useSelector((state) => state.post)\n  const { imagePaths } = useSelector((state) => state.post);\n  const [ text, setText ] = React.useState('');\n  const onChangeText = React.useCallback((e) => {\n    setText(e.target.value);\n  }, [text]);\n  const inpFileUploader = React.useRef('');\n  const onClickFileUploader = React.useCallback(() => {\n    inpFileUploader.current.click;\n    console.log(inpFileUploader.current)\n  }, [inpFileUploader.current]);\n  const onClickPost = () => {\n    console.log('게시물 등록!')\n  }\n  const onSubmit = React.useCallback(() => {\n    dispatch(addPost)\n  }, []);\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea \n        value={text} \n        onChange={onChangeText} \n        maxLength={140} \n        placeholder=\"내용을 입력하세요\"\n      />\n      <div>\n        <input type=\"file\" multiple hidden />\n        <Button onClick={onClickFileUploader} ref={inpFileUploader}>파일업로드</Button>\n        <Button htmlType=\"submit\" type=\"primary\" style={{ float: 'right' }} onClick={onClickPost}>게시물 등록</Button>\n      </div>\n      {imagePaths.map((post) => (\n        <div key={post.id} style={{ display: 'inline-block' }}>\n          <img src={post} style={{ width: '200px' }} alt={post} />\n          <Button>제거</Button>\n        </div>\n      ))}      \n    </Form>\n  );\n}"]},"metadata":{},"sourceType":"module"}