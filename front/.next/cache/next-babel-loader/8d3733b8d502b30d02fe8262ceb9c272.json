{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nvar initialState = {\n  user: {},\n  post: {}\n}; // action creator\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n}; // action creator\n\nexport var logoutAction = function logoutAction(data) {\n  return {\n    type: 'LOG_OUT',\n    data: data\n  };\n}; // action creator\n// const changeNickname = (data) =>  {\n//   return {\n//     type: 'CHANGE_NICKNAME',\n//     data\n//   }\n// }\n// (이전상태, 액션) => return 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/sunny.sim/react_nodebird/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","loginAction","data","type","logoutAction","rootReducer","state","action","payload","isLoggedIn"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB,C,CASA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,IAAD,EAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKN,OAAL;AACE,6CAAYS,KAAZ,GAAsBC,MAAM,CAACC,OAA7B;;AACF,SAAK,QAAL;AACE,6CACKF,KADL;AAEEP,QAAAA,IAAI,kCACCO,KAAK,CAACP,IADP;AAEFU,UAAAA,UAAU,EAAE,IAFV;AAGFV,UAAAA,IAAI,EAAEQ,MAAM,CAACL;AAHX;AAFN;;AAQF,SAAK,SAAL;AACE,6CACKI,KADL;AAEEP,QAAAA,IAAI,kCACCO,KAAK,CAACP,IADP;AAEFU,UAAAA,UAAU,EAAE,KAFV;AAGFV,UAAAA,IAAI,EAAE;AAHJ;AAFN;;AAQF;AACE,aAAOO,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nconst initialState = {\n  user: {\n    \n  },\n  post: {\n    \n  }\n}\n\n// action creator\nexport const loginAction = (data) => {\n  return {\n    type: 'LOG_IN',\n    data\n  }\n}\n\n// action creator\nexport const logoutAction = (data) => {\n  return {\n    type: 'LOG_OUT',\n    data\n  }\n}\n\n// action creator\n// const changeNickname = (data) =>  {\n//   return {\n//     type: 'CHANGE_NICKNAME',\n//     data\n//   }\n// }\n\n// (이전상태, 액션) => return 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE: \n      return { ...state, ...action.payload }\n    case 'LOG_IN':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: true,\n          user: action.data,\n        }\n      }\n    case 'LOG_OUT':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: false,\n          user: null,\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}